/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  IDatePartModel,
} from './models/date-part.model';
import {
  IDatePickerModel,
} from './models/date-picker.model';

export namespace Components {
  interface StDatePartSelector {
    'dataSource': IDatePartModel[];
    'date': Date;
    'mode': string;
    'onDateChange': (date: Date) => void;
    'show': boolean;
  }
  interface StDatepicker {
    'date': Date;
    'from'?: number;
    'getDate': () => Promise<Date>;
    'open': boolean;
    'to'?: number;
  }
  interface StDatepickerFooter {
    'onApprove': () => void;
    'onCancel': () => void;
  }
  interface StDatepickerHeader {
    'currentDay': Date;
    'onDateChange': (date: Date) => void;
    'yearFrom'?: number;
    'yearTo'?: number;
  }
  interface StDatepickerInner {
    'currentMonth': Date;
    'datepickerDates': IDatePickerModel[];
    'onDateSelect': (date: Date) => void;
    'onMonthChange': (date: Date) => void;
    'resolveDayView': (date: IDatePickerModel) => string;
  }
  interface StDatepickerNav {
    'currentDate': Date;
    'format': string;
    'navStep': string;
    'onDateChange': (date: Date) => void;
    'renderDate': () => void;
    'toggleView': () => void;
  }
  interface StDatepickerTopnav {
    'date': Date;
    'onDateChange': (date: Date) => void;
    'renderDate': () => void;
    'toggleView': () => void;
  }
  interface StDaterangepicker {
    'dateEnd'?: Date;
    'dateStart'?: Date;
    'getDateRange': () => Promise<any>;
    'open': boolean;
  }
  interface StDaterangepickerHeader {
    'dateEnd'?: Date;
    'dateStart'?: Date;
  }
}

declare global {


  interface HTMLStDatePartSelectorElement extends Components.StDatePartSelector, HTMLStencilElement {}
  var HTMLStDatePartSelectorElement: {
    prototype: HTMLStDatePartSelectorElement;
    new (): HTMLStDatePartSelectorElement;
  };

  interface HTMLStDatepickerElement extends Components.StDatepicker, HTMLStencilElement {}
  var HTMLStDatepickerElement: {
    prototype: HTMLStDatepickerElement;
    new (): HTMLStDatepickerElement;
  };

  interface HTMLStDatepickerFooterElement extends Components.StDatepickerFooter, HTMLStencilElement {}
  var HTMLStDatepickerFooterElement: {
    prototype: HTMLStDatepickerFooterElement;
    new (): HTMLStDatepickerFooterElement;
  };

  interface HTMLStDatepickerHeaderElement extends Components.StDatepickerHeader, HTMLStencilElement {}
  var HTMLStDatepickerHeaderElement: {
    prototype: HTMLStDatepickerHeaderElement;
    new (): HTMLStDatepickerHeaderElement;
  };

  interface HTMLStDatepickerInnerElement extends Components.StDatepickerInner, HTMLStencilElement {}
  var HTMLStDatepickerInnerElement: {
    prototype: HTMLStDatepickerInnerElement;
    new (): HTMLStDatepickerInnerElement;
  };

  interface HTMLStDatepickerNavElement extends Components.StDatepickerNav, HTMLStencilElement {}
  var HTMLStDatepickerNavElement: {
    prototype: HTMLStDatepickerNavElement;
    new (): HTMLStDatepickerNavElement;
  };

  interface HTMLStDatepickerTopnavElement extends Components.StDatepickerTopnav, HTMLStencilElement {}
  var HTMLStDatepickerTopnavElement: {
    prototype: HTMLStDatepickerTopnavElement;
    new (): HTMLStDatepickerTopnavElement;
  };

  interface HTMLStDaterangepickerElement extends Components.StDaterangepicker, HTMLStencilElement {}
  var HTMLStDaterangepickerElement: {
    prototype: HTMLStDaterangepickerElement;
    new (): HTMLStDaterangepickerElement;
  };

  interface HTMLStDaterangepickerHeaderElement extends Components.StDaterangepickerHeader, HTMLStencilElement {}
  var HTMLStDaterangepickerHeaderElement: {
    prototype: HTMLStDaterangepickerHeaderElement;
    new (): HTMLStDaterangepickerHeaderElement;
  };
  interface HTMLElementTagNameMap {
    'st-date-part-selector': HTMLStDatePartSelectorElement;
    'st-datepicker': HTMLStDatepickerElement;
    'st-datepicker-footer': HTMLStDatepickerFooterElement;
    'st-datepicker-header': HTMLStDatepickerHeaderElement;
    'st-datepicker-inner': HTMLStDatepickerInnerElement;
    'st-datepicker-nav': HTMLStDatepickerNavElement;
    'st-datepicker-topnav': HTMLStDatepickerTopnavElement;
    'st-daterangepicker': HTMLStDaterangepickerElement;
    'st-daterangepicker-header': HTMLStDaterangepickerHeaderElement;
  }
}

declare namespace LocalJSX {
  interface StDatePartSelector {
    'dataSource'?: IDatePartModel[];
    'date'?: Date;
    'mode'?: string;
    'onDateChange'?: (date: Date) => void;
    'show'?: boolean;
  }
  interface StDatepicker {
    'date'?: Date;
    'from'?: number;
    'onDateChanged'?: (event: CustomEvent<any>) => void;
    'open'?: boolean;
    'to'?: number;
  }
  interface StDatepickerFooter {
    'onApprove'?: () => void;
    'onCancel'?: () => void;
  }
  interface StDatepickerHeader {
    'currentDay'?: Date;
    'onDateChange'?: (date: Date) => void;
    'yearFrom'?: number;
    'yearTo'?: number;
  }
  interface StDatepickerInner {
    'currentMonth'?: Date;
    'datepickerDates'?: IDatePickerModel[];
    'onDateSelect'?: (date: Date) => void;
    'onMonthChange'?: (date: Date) => void;
    'resolveDayView'?: (date: IDatePickerModel) => string;
  }
  interface StDatepickerNav {
    'currentDate'?: Date;
    'format'?: string;
    'navStep'?: string;
    'onDateChange'?: (date: Date) => void;
    'renderDate'?: () => void;
    'toggleView'?: () => void;
  }
  interface StDatepickerTopnav {
    'date'?: Date;
    'onDateChange'?: (date: Date) => void;
    'renderDate'?: () => void;
    'toggleView'?: () => void;
  }
  interface StDaterangepicker {
    'dateEnd'?: Date;
    'dateStart'?: Date;
    'onDateChanged'?: (event: CustomEvent<any>) => void;
    'open'?: boolean;
  }
  interface StDaterangepickerHeader {
    'dateEnd'?: Date;
    'dateStart'?: Date;
  }

  interface IntrinsicElements {
    'st-date-part-selector': StDatePartSelector;
    'st-datepicker': StDatepicker;
    'st-datepicker-footer': StDatepickerFooter;
    'st-datepicker-header': StDatepickerHeader;
    'st-datepicker-inner': StDatepickerInner;
    'st-datepicker-nav': StDatepickerNav;
    'st-datepicker-topnav': StDatepickerTopnav;
    'st-daterangepicker': StDaterangepicker;
    'st-daterangepicker-header': StDaterangepickerHeader;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'st-date-part-selector': LocalJSX.StDatePartSelector & JSXBase.HTMLAttributes<HTMLStDatePartSelectorElement>;
      'st-datepicker': LocalJSX.StDatepicker & JSXBase.HTMLAttributes<HTMLStDatepickerElement>;
      'st-datepicker-footer': LocalJSX.StDatepickerFooter & JSXBase.HTMLAttributes<HTMLStDatepickerFooterElement>;
      'st-datepicker-header': LocalJSX.StDatepickerHeader & JSXBase.HTMLAttributes<HTMLStDatepickerHeaderElement>;
      'st-datepicker-inner': LocalJSX.StDatepickerInner & JSXBase.HTMLAttributes<HTMLStDatepickerInnerElement>;
      'st-datepicker-nav': LocalJSX.StDatepickerNav & JSXBase.HTMLAttributes<HTMLStDatepickerNavElement>;
      'st-datepicker-topnav': LocalJSX.StDatepickerTopnav & JSXBase.HTMLAttributes<HTMLStDatepickerTopnavElement>;
      'st-daterangepicker': LocalJSX.StDaterangepicker & JSXBase.HTMLAttributes<HTMLStDaterangepickerElement>;
      'st-daterangepicker-header': LocalJSX.StDaterangepickerHeader & JSXBase.HTMLAttributes<HTMLStDaterangepickerHeaderElement>;
    }
  }
}


